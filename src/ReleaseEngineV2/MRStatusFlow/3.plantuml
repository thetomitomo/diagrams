@startuml
!theme bluegray
skinparam FooterFontColor black
skinparam StateFontColor black

state "Pending - Failed Verification" as PFV
state "In Scope - Pending Merge" as ISPM
state "<b>[NEW]</b> In Scope - Partially Merged" as ISPRM #Pink
state "<b>[NEW]</b> Rejected - Partially Merged" as RPRM #Pink 
state "In Scope - Merged" as ISM
state "Rejected - Failed Verification" as RFV
state "Rejected - Missed Out Merge" as RMOM
state "Released" as RR
state "RETRY" as retry #LightGray
' state "Pending Readiness Check" as pendingPreReq
' state "Pending RM Deployment" as pendingRMDeploy
' state "Verify Canary Instance" as verifyCanary
' state "Pending Live Verification" as pendingLiveVer
' state pendingLiveVerFork <<fork>>
' state "Pending Promote" as pendingPromote
' state "Abort Requested" as abortRequested
' state "Rollback Requested" as rollbackRequested
' state "Rollback Done" as rollbackDone

title MR Status Flow with MR Addition Flow

RPRM: - Operator to manually handle merge or removal
ISPM : - User can follow Revert flow
ISPRM : - User can follow Revert flow 
RPRM  : - User can follow Revert flow

[*] -down-> PFV : **START**

PFV -down-> ISPM : On passing JIRA verification
PFV -down-> RFV : On VersionSubmission\ntransition

RFV -up-> PFV : On user re-add

ISPM --> ISM :  <b>[CHANGED]</b> On merging\nALL MR

ISPM --> RMOM : If not merged\nat end of Lockdown
RMOM --> PFV : On user re-add
RMOM --> retry : User can resubmit\nto other version

ISPM -down-> ISPRM :  <b>[NEW]</b> On merging MR\nwhen have other open MR
ISPRM --> ISM :  <b>[NEW]</b> On merging\nALL MR

ISPRM --> RPRM : On VersionSubmission\ntransition
RPRM --> ISM :  <b>[NEW]</b> On merging\nALL MR

' RPRM --> RMOM : <b>[NEW]</b> On user manual shift

ISM -down-> RR : On Release

ISPM -[#Pink]-> ISPRM : <b>[NEW]</b> On adding\na MERGED MR
ISM -down[#Pink]-> ISPRM :  <b>[NEW]</b> On adding\nan OPEN MR


' note right of preOp : [CHANGED]\n- new inert status\n- REMOVE dev noti on start operation
' preOp: RM: Start Operation
' preOp --> pendingPreReq : Start operation

' note right of pendingPreReq : [CHANGED] \n- in addition to release-checklist-pre-req items,\n  include release-events as blockers \n- new check\n- add noti on moving to Pending Dev ACK
' pendingPreReq --> pendingDevAck  : All requisites done
' pendingPreReq: System: Check for event whitelist
' pendingPreReq: Dev: TICK prereq

' note right of pendingDevAck : [CHANGED] \n- Switched state flow to\n  PendingPreReq -> PendingDevAck
' pendingDevAck --> pendingRMDeploy : All ACKed
' pendingDevAck: Dev: ACK

' pendingRMDeploy: RM: Deploys
' pendingRMDeploy --> Deploying : RM deploy

' Deploying : RM: Monitoring
' Deploying : RM: Abort

' Deploying --> Aborted : Abort

' Deploying --> Failed : Fails

' Failed --> pendingDevAck : Reinitiate
' Failed: RM: Reinitiate

' Deploying --> verifyCanary : progress with Canary
' verifyCanary: Dev: Ack
' verifyCanary: Dev: Request abort

' verifyCanary --> pendingPromote : All ACK
' pendingPromote: RM: PromoteÆ’

' verifyCanary --> abortRequested : Request abort
' abortRequested: RM: Abort

' abortRequested --> Aborted : RM abort
' Aborted: Rm : Reinitiate

' Aborted --> pendingDevAck : Reinitiate
' pendingPromote: RM: Reinitiate

' pendingPromote --> pendingLiveVerFork : Promote
' note right of pendingLiveVerFork : Need Live\nVerification
' pendingLiveVerFork --> pendingLiveVer : True
' pendingLiveVerFork --> Done : False

' pendingLiveVer --> Done :All dev ACK\n All CIDs deployed
' pendingLiveVer --> pendingRMDeploy : not All CIDs deployed
' pendingLiveVer: Dev: ACK

' Deploying --> pendingLiveVerFork : Success\nwithout Canary

' Done: Dev: Request Rollback

' Done --> rollbackRequested
' rollbackRequested: RM: Execute rollback

' rollbackRequested --> rollbackDone : RM rollback finish
' rollbackDone: RM: Reinitiate

' rollbackDone --> pendingDevAck : Reinitiate

@enduml

